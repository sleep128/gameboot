package com.gp.dao.mapper;

import com.gp.dao.model.GpPubgMatchData;
import com.gp.dao.model.GpPubgMatchDataExample;
import org.springframework.transaction.annotation.Transactional;

import java.util.List;
import java.util.Map;
public interface GpPubgMatchDataMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gp_pubg_match_data
     *
     * @mbg.generated
     */
    long countByExample(GpPubgMatchDataExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gp_pubg_match_data
     *
     * @mbg.generated
     */
    int deleteById(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gp_pubg_match_data
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(GpPubgMatchData record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gp_pubg_match_data
     *
     * @mbg.generated
     */
    int insertMapSelective(Map<String, Object> record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gp_pubg_match_data
     *
     * @mbg.generated
     */
    int insertSelective(GpPubgMatchData record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gp_pubg_match_data
     *
     * @mbg.generated
     */
    List<GpPubgMatchData> selectByExample(GpPubgMatchDataExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gp_pubg_match_data
     *
     * @mbg.generated
     */
    GpPubgMatchData selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gp_pubg_match_data
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(GpPubgMatchData record);
}